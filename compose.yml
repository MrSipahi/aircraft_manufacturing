version: '3.8'

services:
  web:
    build: .
    command: sh -c "python manage.py makemigrations --noinput &&
                    python manage.py migrate --noinput && 
                    python manage.py collectstatic --noinput && 
                    python manage.py setup_initial_data &&
                    gunicorn aircraft_manufacturing.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120"
    restart: unless-stopped
    volumes:
      - static_volume:/app/staticfiles
    environment:
      - DJANGO_SETTINGS_MODULE=aircraft_manufacturing.production_settings
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}

      - DEFAULT_MONTAJ_USER_USERNAME=${DEFAULT_MONTAJ_USER_USERNAME}
      - DEFAULT_MONTAJ_USER_EMAIL=${DEFAULT_MONTAJ_USER_EMAIL}
      - DEFAULT_MONTAJ_USER_PASSWORD=${DEFAULT_MONTAJ_USER_PASSWORD}

      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=${POSTGRES_DB}
      - SQL_USER=${POSTGRES_USER}
      - SQL_PASSWORD=${POSTGRES_PASSWORD}
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - db
    networks:
      - backend
      - frontend

  nginx:
    image: nginx:1.21-alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
    ports:
      - "7322:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - frontend

  db:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

volumes:
  postgres_data:
  static_volume:

networks:
  backend:
  frontend: